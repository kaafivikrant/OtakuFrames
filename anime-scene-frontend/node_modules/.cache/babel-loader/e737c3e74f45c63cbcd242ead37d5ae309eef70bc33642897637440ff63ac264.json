{"ast":null,"code":"var _jsxFileName = \"/Users/vik/OtakuFrames/anime-scene-frontend/src/App.js\";\nimport React from \"react\";\nimport { Container, Typography, Button, Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const handleUploadClick = () => {\n    const fileInput = document.getElementById(\"fileUpload\");\n    fileInput.click();\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file.name);\n      // TODO: Handle file upload logic here (e.g., call backend API)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      textAlign: \"center\",\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Anime Scene Retrieval Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      paragraph: true,\n      children: \"Upload an anime episode to extract and search scenes effortlessly.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"fileUpload\",\n      style: {\n        display: \"none\"\n      },\n      accept: \"video/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleUploadClick,\n      sx: {\n        marginTop: \"1rem\"\n      },\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        color: \"text.secondary\",\n        children: \"Supported formats: MP4, AVI, MKV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Container","Typography","Button","Box","jsxDEV","_jsxDEV","App","handleUploadClick","fileInput","document","getElementById","click","handleFileChange","event","file","target","files","console","log","name","maxWidth","sx","textAlign","padding","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","type","id","style","display","accept","onChange","color","onClick","marginTop","mt","_c","$RefreshReg$"],"sources":["/Users/vik/OtakuFrames/anime-scene-frontend/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Container, Typography, Button, Box } from \"@mui/material\";\n\nfunction App() {\n  const handleUploadClick = () => {\n    const fileInput = document.getElementById(\"fileUpload\");\n    fileInput.click();\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      console.log(\"File selected:\", file.name);\n      // TODO: Handle file upload logic here (e.g., call backend API)\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ textAlign: \"center\", padding: \"2rem\" }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Anime Scene Retrieval Platform\n      </Typography>\n      <Typography variant=\"body1\" paragraph>\n        Upload an anime episode to extract and search scenes effortlessly.\n      </Typography>\n      <input\n        type=\"file\"\n        id=\"fileUpload\"\n        style={{ display: \"none\" }}\n        accept=\"video/*\"\n        onChange={handleFileChange}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleUploadClick}\n        sx={{ marginTop: \"1rem\" }}\n      >\n        Upload Video\n      </Button>\n      <Box mt={2}>\n        <Typography variant=\"caption\" color=\"text.secondary\">\n          Supported formats: MP4, AVI, MKV\n        </Typography>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACvDF,SAAS,CAACG,KAAK,CAAC,CAAC;EACnB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACRG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,IAAI,CAACK,IAAI,CAAC;MACxC;IACF;EACF,CAAC;EAED,oBACEd,OAAA,CAACL,SAAS;IAACoB,QAAQ,EAAC,IAAI;IAACC,EAAE,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACpEnB,OAAA,CAACJ,UAAU;MAACwB,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb1B,OAAA,CAACJ,UAAU;MAACwB,OAAO,EAAC,OAAO;MAACO,SAAS;MAAAR,QAAA,EAAC;IAEtC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb1B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,YAAY;MACfC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAE1B;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF1B,OAAA,CAACH,MAAM;MACLuB,OAAO,EAAC,WAAW;MACnBc,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEjC,iBAAkB;MAC3Bc,EAAE,EAAE;QAAEoB,SAAS,EAAE;MAAO,CAAE;MAAAjB,QAAA,EAC3B;IAED;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT1B,OAAA,CAACF,GAAG;MAACuC,EAAE,EAAE,CAAE;MAAAlB,QAAA,eACTnB,OAAA,CAACJ,UAAU;QAACwB,OAAO,EAAC,SAAS;QAACc,KAAK,EAAC,gBAAgB;QAAAf,QAAA,EAAC;MAErD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACY,EAAA,GA5CQrC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}